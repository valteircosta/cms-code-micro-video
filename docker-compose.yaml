# O docker-compose versão 3  é mais avançado e superior em integração
# com swarm,kubernetes etc
version: "3"

services:
  app:
    # Indica ao caminho do arquivo de construção Dockerfile
    build: .
    container_name: micro-videos-app
    # Passando params para dockerize rodar script entrypoint.sh
    entrypoint: ./.docker/entrypoint.sh
    environment:
      - XDEBUG_CONFIG=xdebug.remote_host=app xdebug.remote_port=9001 xdebug.remote_enable=1 xdebug.remote_autostart=1 xdebug.remote_handler=dbgp xdebug.idekey=VSCODE xdebug.remote_log=/var/log/xdebug/xdebug.log
    ports:
      - "9001:9001"

    volumes:
      - .:/var/www:rw,cached
      - ./.docker/app/log:/var/log:rw,cached
      - ./.docker/app/log/xdebug:/var/log/xdebug:rw,cached
      - ./.docker/app/php.ini:/usr/local/etc/php/php.ini
    #Rede a qual pertence o containner
    networks:
      - app-network
    # Aqui agora apenas garante a ordem de criação dos serviços
    depends_on:
      - db
      - redis

  nginx:
    # Indica ao caminho do arquivo de construção Dockerfile
    build: .docker/nginx
    # Nome do container
    container_name: micro-videos-nginx
    # Passa configuração  e faz teste de conexão para com o app
    entrypoint: dockerize -template ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf  -wait tcp://app:9000 nginx -g "daemon off;"
    # Reiniciar caso o container cair
    restart: always
    # Libera a entrada de forma interativa no container (bash e outros,)
    tty: true
    ports:
      - "8000:80"
    # Variavéis para endereço app
    environment:
      - NGINX_HOST=app
      - NGINX_PORT=9000
    volumes:
      - .:/var/www
      - ./.docker/nginx/log:/var/log/nginx:rw,cached
    networks:
      - app-network
    # O nfinx será criado depois do app
    depends_on:
      - app

  db:
    image: mysql:5.7
    # Comando que evita erros (Se não usar é muito choro e ranger de dentes para o programador)
    command: --innodb-use-native-aio=0
    container_name: micro-videos-db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    # Volume do banco de dados
    volumes:
      - ./.docker/database/dumps:/dumps:rw,cached
      - ./.docker/database/data:/var/lib/mysql:rw,cached
      - ./.docker/database/config:/etc/mysql/conf.d:rw,cached
      - ./.docker/database/config:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: micro-videos-redis
    restart: always
    tty: true
    ports:
      - "6379:6379"
    volumes:
      - ./.docker/redis:/data:rw,cached
    networks:
      - app-network

#Construção da rede
networks:
  # Nome e configuração da rede
  app-network:
    driver: bridge
